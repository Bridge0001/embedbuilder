{"version":3,"sources":["Components/Footer/index.jsx","Components/Header/index.jsx","Components/Builder/Color/index.jsx","Components/Builder/Author/index.jsx","Components/Builder/Title/index.jsx","Components/Builder/Description/index.jsx","Components/Builder/Thumbnail/index.jsx","Components/Builder/Fields/index.jsx","Components/Builder/Image/index.jsx","Components/Builder/Footer/index.jsx","Components/Builder/index.jsx","Components/Output/index.jsx","Components/Main/index.jsx","Components/App/index.jsx","registerServiceWorker.js","index.js","Components/constants.js"],"names":["Footer","className","React","Component","Header","render","id","href","title","PureComponent","Color","props","handleClick","setState","displayColorPicker","state","handleClose","handleChangeComplete","color","event","hex","intColor","Math","round","rgb","r","g","b","document","getElementById","style","type","name","placeholder","value","this","onClick","cursor","readOnly","position","zIndex","top","right","bottom","left","backgroundColor","disableAlpha","onChangeComplete","Author","URL","iconURL","target","classNames","trim","split","length","RegEx","test","push","splice","indexOf","Set","join","imageURL","onChange","updateIconURL","maxLength","updateName","updateURL","Title","updateTitle","Description","description","rows","updateDescription","Thumbnail","thumbnailURL","updateThumbnailURL","Fields","button","fields","index","children","setAttribute","removeAttribute","insertAdjacentHTML","field","parentNode","removeChild","addField","role","aria-label","removeField","Image","updateImageURL","text","Output","embedObject","form","elements","parseInt","author_name","hasOwnProperty","author","author_url","url","author_icon_url","icon_url","i","field_name","field_value","field_inline","checked","inline","thumbnail","image","timestamp","Date","innerHTML","JSON","stringify","jsonOutput","replace","element","selections","range","body","createTextRange","moveToElementText","select","execCommand","window","getSelection","createRange","selectNode","addRange","console","error","generateJSON","copyJSON","Main","Builder","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","exports"],"mappings":"oNAYeA,E,uKARX,OACE,gCACE,yBAAKC,UAAU,aAAf,sD,GAJaC,IAAMC,WCANC,E,4MACnBC,OAAS,kBACP,gCACE,yBAAKC,GAAG,gBACN,uBAAGC,KAAK,gCAAR,WAEF,yBAAKC,MAAM,0FAAX,2B,YAN8BN,IAAMO,e,QC0E3BC,E,kDAxEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,YAAc,WACZ,EAAKC,SAAS,CAAEC,oBAAqB,EAAKC,MAAMD,sBAV/B,EAanBE,YAAc,WACZ,EAAKH,SAAS,CAAEC,oBAAoB,KAdnB,EAiBnBG,qBAAuB,SAACC,EAAOC,GAC7B,EAAKN,SAAS,CACZK,MAAOA,EAAME,IACbC,SAAU,MAAYC,KAAKC,MAAML,EAAMM,IAAIC,GAAK,IAAMH,KAAKC,MAAML,EAAMM,IAAIE,GAAKJ,KAAKC,MAAML,EAAMM,IAAIG,KAEvGC,SAASC,eAAe,qBAAqBC,MAAM,eAAnD,oBAAiFZ,EAAME,MApBvF,EAAKL,MAAQ,CACXG,MAAO,UACPG,SAAU,EACVP,oBAAoB,GALL,E,qDA0BjB,OACE,yBAAKb,UAAU,2BACb,2BACEK,GAAK,QACLyB,KAAO,OACPC,KAAO,QACPC,YAAc,cACdC,MAAUC,KAAKpB,MAAMM,SACrBe,QAAYD,KAAKvB,YACjBkB,MAAS,CACPO,OAAQ,WAEVC,UAAQ,IAIRH,KAAKpB,MAAMD,mBACT,yBACEgB,MAAS,CACPS,SAAU,WACVC,OAAQ,IAGV,yBACEV,MAAO,CACLS,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,MACNC,gBAAiB,sBAEnBT,QAAUD,KAAKnB,cACjB,kBAAC,eAAD,CACEE,MAAUiB,KAAKpB,MAAMG,MACrB4B,cAAiB,EACjBC,iBAAqBZ,KAAKlB,wBAG9B,U,GAlEQf,IAAMC,W,eCkFX6C,E,kDAjFb,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXiB,KAAM,GACNiB,IAAK,GACLC,QAAS,IALM,E,uDASR/B,GACTgB,KAAKtB,SAAS,CACZmB,KAAMb,EAAMgC,OAAOjB,U,gCAIbf,GACR,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMP,IAAIQ,KAAKtC,EAAMgC,OAAOjB,OAC5DkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZoC,IAAK9B,EAAMgC,OAAOjB,U,oCAIRf,GACZ,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMO,SAASN,KAAKtC,EAAMgC,OAAOjB,OACjEkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZqC,QAAS/B,EAAMgC,OAAOjB,U,+BAIhB,IAAD,OACP,OACE,yBAAKjC,UAAY,4BACf,yBAAKA,UAAY,qBACf,2BACE8B,KAAO,MACPC,KAAO,kBACPC,YAAc,kBACdC,MAASC,KAAKpB,MAAMmC,QACpBc,SAAY,SAAA7C,GAAK,OAAI,EAAK8C,cAAc9C,OAG5C,yBAAKlB,UAAU,qBACb,2BACE8B,KAAO,OACPC,KAAO,cACPC,YAAc,cACdiC,UAAY,MACZhC,MAASC,KAAKpB,MAAMiB,KACpBgC,SAAY,SAAA7C,GAAK,OAAI,EAAKgD,WAAWhD,OAGzC,yBAAKlB,UAAU,oBACb,2BACE8B,KAAO,MACPC,KAAO,aACPC,YAAc,aACdC,MAASC,KAAKpB,MAAMkC,IACpBe,SAAY,SAAA7C,GAAK,OAAI,EAAKiD,UAAUjD,Y,GA1E3BjB,IAAMC,WCyDZkE,E,kDAxDb,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXP,MAAO,GACPyC,IAAK,IAJU,E,wDAQP9B,GACVgB,KAAKtB,SAAS,CACZL,MAAOW,EAAMgC,OAAOjB,U,gCAIdf,GACR,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMP,IAAIQ,KAAKtC,EAAMgC,OAAOjB,OAC5DkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZoC,IAAK9B,EAAMgC,OAAOjB,U,+BAIZ,IAAD,OACP,OACE,yBAAKjC,UAAY,2BACf,yBAAKA,UAAY,oBACf,2BACE8B,KAAO,OACPC,KAAO,QACPC,YAAc,QACdiC,UAAU,MACVhC,MAASC,KAAKpB,MAAMP,MACpBwD,SAAY,SAAA7C,GAAK,OAAI,EAAKmD,YAAYnD,OAG1C,yBAAKlB,UAAU,mBACb,2BACE8B,KAAK,MACLC,KAAK,MACLC,YAAY,MACZC,MAASC,KAAKpB,MAAMkC,IACpBe,SAAY,SAAA7C,GAAK,OAAI,EAAKiD,UAAUjD,Y,GAjD5BjB,IAAMC,WC8BXoE,E,kDA9Bb,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXyD,YAAa,IAHE,E,8DAODrD,GAChBgB,KAAKtB,SAAS,CACZ2D,YAAarD,EAAMgC,OAAOjB,U,+BAIpB,IAAD,OACP,OACE,yBAAKjC,UAAY,iCACf,8BACE+B,KAAO,cACPC,YAAc,cACdiC,UAAY,OACZO,KAAO,IACPvC,MAASC,KAAKpB,MAAMyD,YACpBR,SAAY,SAAA7C,GAAK,OAAI,EAAKuD,kBAAkBvD,W,GAvB5BjB,IAAMC,WCyCjBwE,E,kDAvCb,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACX6D,aAAc,IAHC,E,+DAOAzD,GACjB,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMO,SAASN,KAAKtC,EAAMgC,OAAOjB,OACjEkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZ+D,aAAczD,EAAMgC,OAAOjB,U,+BAIrB,IAAD,OACP,OACE,yBAAKjC,UAAY,+BACf,yBAAKA,UAAY,uBACf,2BACE8B,KAAO,MACPC,KAAO,gBACPC,YAAc,gBACdC,MAASC,KAAKpB,MAAM6D,aACpBZ,SAAY,SAAA7C,GAAK,OAAI,EAAK0D,mBAAmB1D,Y,GAhCjCjB,IAAMC,WC2Ef2E,E,uKA3EJC,GACP,IAAIC,EAASpD,SAASC,eAAe,UACjCoD,EAAQD,EAAOE,SAAS3B,OAGxB0B,GAAS,GACXF,EAAOI,aAAa,YAAY,GAGhCJ,EAAOK,gBAAgB,YAGzBJ,EAAOK,mBAAmB,YAA1B,yBACoBJ,EADpB,oKAGwCA,EAHxC,qDAG0FA,EAAQ,EAHlG,uDAI+BA,EAJ/B,gEAI4FA,EAAO,EAJnG,0GAM8CA,EAN9C,sUAYgBrD,SAASC,eAAe,mBAC9BuD,gBAAgB,c,kCAGhBL,GACV,IACIE,EADSrD,SAASC,eAAe,UAClBqD,SAAS3B,OAExB0B,EAAQ,EACVF,EAAOK,gBAAgB,YAGvBL,EAAOI,aAAa,YAAY,GAGlC,IAAIG,EAAQ1D,SAASC,eAAT,gBAAiCoD,EAAQ,IACjDK,GACFA,EAAMC,WAAWC,YAAYF,GAGlB1D,SAASC,eAAe,gBAC9BuD,gBAAgB,c,+BAGf,IAAD,OACP,OACE,yBAAKnF,UAAY,4BACf,yBAAKK,GAAK,WACV,yBAAKL,UAAY,wBACf,4BACEK,GAAK,eACLyB,KAAO,SACPK,QAAW,SAAAjB,GAAK,OAAI,EAAKsE,SAAStE,EAAMgC,UAExC,0BAAMuC,KAAO,MAAMC,aAAa,aAAhC,UALF,oBAQA,4BACErF,GAAK,kBACLyB,KAAO,SACPK,QAAW,SAAAjB,GAAK,OAAI,EAAKyE,YAAYzE,EAAMgC,UAE3C,0BAAMuC,KAAO,MAAMC,aAAa,gBAAhC,UALF,6B,GA9DWzF,IAAMC,WCyCZ0F,E,kDAvCb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXgD,SAAU,IAHK,E,2DAOJ5C,GACb,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMO,SAASN,KAAKtC,EAAMgC,OAAOjB,OACjEkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZkD,SAAU5C,EAAMgC,OAAOjB,U,+BAIjB,IAAD,OACP,OACE,yBAAKjC,UAAY,2BACf,yBAAKA,UAAY,mBACf,2BACE8B,KAAO,MACPC,KAAO,YACPC,YAAc,YACdC,MAASC,KAAKpB,MAAMgD,SACpBC,SAAY,SAAA7C,GAAK,OAAI,EAAK2E,eAAe3E,Y,GAhCjCjB,IAAMC,WC+CXH,E,kDA9Cb,WAAYW,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXgF,KAAM,GACN7C,QAAS,IAJM,E,uDAQR/B,GACTgB,KAAKtB,SAAS,CACZkF,KAAM5E,EAAMgC,OAAOjB,U,oCAITf,GACZ,IAAIiC,EAAajC,EAAMgC,OAAOlD,UAAUoD,OAAOC,MAAM,KACjDnC,EAAMgC,OAAOjB,MAAMqB,SAAWC,QAAMO,SAASN,KAAKtC,EAAMgC,OAAOjB,OACjEkB,EAAWM,KAAK,WAGhBN,EAAWO,OAAOP,EAAWQ,QAAQ,WAAY,GAEnDzC,EAAMgC,OAAOlD,UAAY,YAAK,IAAI4D,IAAIT,IAAcU,KAAK,KAAKT,OAE9DlB,KAAKtB,SAAS,CACZqC,QAAS/B,EAAMgC,OAAOjB,U,+BAKxB,OACE,yBAAKjC,UAAY,4BACf,yBAAKA,UAAU,mBACb,+BACE,2BACE+B,KAAO,YACPD,KAAO,aAHX,uB,GAlCW7B,IAAMC,WCsCZ6F,E,uKA7BX,OACE,yBAAK/F,UAAU,QACb,yBAAKK,GAAG,qBACN,0BAAMA,GAAG,iBACP,yBAAKL,UAAU,SACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,uBAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAKJ,kBAAC,EAAD,c,GArBOC,IAAMC,WC8IZ6F,E,kDApJb,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXkF,YAAa,IAHE,E,2DAQjB,IAAIC,EAAOtE,SAASC,eAAe,iBAE/BoE,EAAc,GAGd/E,EAAQgF,EAAKC,SAAL,MAAuBjE,MAC/BhB,IACF+E,EAAY/E,MAAQkF,SAASlF,EAAO,KAGtC,IAAImF,EAAcH,EAAKC,SAAS,eAAejE,MAC/C,GAAImE,EAAa,CACVJ,EAAYK,eAAe,YAC9BL,EAAYM,OAAS,IAEvBN,EAAYM,OAAOvE,KAAOqE,EAE1B,IAAIG,EAAaN,EAAKC,SAAS,cAAcjE,MACzCsE,GAAchD,QAAMP,IAAIQ,KAAK+C,KAC/BP,EAAYM,OAAOE,IAAMD,GAG3B,IAAIE,EAAkBR,EAAKC,SAAS,mBAAmBjE,MACnDwE,GAAmBlD,QAAMO,SAASN,KAAKiD,KACzCT,EAAYM,OAAOI,SAAWD,GAIlC,IAAIlG,EAAQ0F,EAAKC,SAAL,MAAuBjE,MAC/B1B,IACFyF,EAAYzF,MAAQA,GAGtB,IAAIiG,EAAMP,EAAKC,SAAL,IAAqBjE,MAC3BuE,GAAOjD,QAAMP,IAAIQ,KAAKgD,KACxBR,EAAYQ,IAAMA,GAGpB,IAAIjC,EAAc0B,EAAKC,SAAL,YAA6BjE,MAC3CsC,IACFyB,EAAYzB,YAAcA,GAG5B,IAAIQ,EAASpD,SAASC,eAAe,UAAUqD,SAC/C,GAAIF,EAAOzB,OAAQ,CACZ0C,EAAYK,eAAe,YAC9BL,EAAYjB,OAAS,IAGvB,IAAK,IAAI4B,EAAI,EAAGA,EAAI5B,EAAOzB,OAAQqD,IAAK,CACtC,IAAIC,EAAaX,EAAKC,SAAL,gBAAuBS,EAAvB,UAAiC1E,MAC9C4E,EAAcZ,EAAKC,SAAL,gBAAuBS,EAAvB,WAAkC1E,MAChD6E,EAAeb,EAAKC,SAAL,gBAAuBS,EAAvB,YAAmCI,QAElDH,GAAcC,GAChBb,EAAYjB,OAAOtB,KAAK,CACtB1B,KAAM6E,EACN3E,MAAO4E,EACPG,OAAQF,KAMhB,IAAIG,EAAYhB,EAAKC,SAAS,iBAAiBjE,MAC3CgF,GAAa1D,QAAMO,SAASN,KAAKyD,KACnCjB,EAAYiB,UAAYA,GAG1B,IAAIC,EAAQjB,EAAKC,SAAS,aAAajE,MACnCiF,GAAS3D,QAAMO,SAASN,KAAK0D,KAC/BlB,EAAYkB,MAAQA,GAaNjB,EAAKC,SAAL,UAA2Ba,UAEzCf,EAAYmB,UAAY,IAAIC,MAG9BzF,SAASC,eAAe,eAAeyF,UAAYC,KAAKC,UAAUvB,EAAa,KAAM,MAGrF,IAAIwB,EAAa7F,SAASC,eAAe,eAAeyF,UAIxDG,GADAA,GADAA,GADAA,EAAaA,EAAWC,QAAQ,cAAe,6CACvBA,QAAQ,UAAW,8CACnBA,QAAQ,kBAAmB,gDAC3BA,QAAQ,aAAc,gDAC9C9F,SAASC,eAAe,eAAeyF,UAAYG,I,iCAInD,IAAIE,EAAU/F,SAASC,eAAe,eACtC,GAAID,SAASgG,WAAY,CACvB,IAAIC,EAAQjG,SAASkG,KAAKC,kBAC1BF,EAAMG,kBAAkBL,GACxBE,EAAMI,SAASF,kBACfnG,SAASsG,YAAY,aAElB,GAAIC,OAAOC,aAAc,CAC5B,IAAIP,EAAQjG,SAASyG,cACrBR,EAAMS,WAAWX,GACjBQ,OAAOC,eAAeG,SAASV,GAC/BjG,SAASsG,YAAY,aAGrBM,QAAQC,MAAM,oM,+BAIR,IAAD,OACP,OACE,yBAAKxI,UAAY,QACf,yBAAKK,GAAK,oBACR,yBAAKL,UAAY,cACf,4BAAQmC,QAAW,kBAAM,EAAKsG,iBAC5B,0BAAMhD,KAAK,MAAMC,aAAW,cAA5B,UADF,uBAGA,4BAAQvD,QAAW,kBAAM,EAAKuG,aAC5B,0BAAMjD,KAAK,MAAMC,aAAW,cAA5B,gBADF,oBAIF,yBAAK1F,UAAU,UACb,6BAAK,yBAAKK,GAAG,cAAcgC,UAAQ,GAAEiF,KAAKC,UAAUrF,KAAKpB,MAAMkF,YAAa,KAAM,Y,GA7IzE/F,IAAMC,WCYZyI,E,uKATX,OACE,8BACE,kBAACC,EAAD,MACA,kBAAC,EAAD,W,GALW3I,IAAMC,WCcV2I,G,8KAVX,OACE,yBAAK7I,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUC,IAAMC,YCIlB4I,EAAcC,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7I,QACfuI,UAAUC,cAAcQ,WAK1BvB,QAAQwB,IAAI,6CAKZxB,QAAQwB,IAAI,4CAMrBC,OAAM,SAAAxB,GACLD,QAAQC,MAAM,4CAA6CA,MCzEjEyB,IAAS7J,OAAO,kBAAC,EAAD,MAASuB,SAASC,eAAe,cDclC,WACb,GAA6C,kBAAmByH,UAAW,CAGzE,GADkB,IAAIrG,IAAIkH,gBAAwBhC,OAAOc,UAC3CmB,SAAWjC,OAAOc,SAASmB,OAIvC,OAGFjC,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAMhB,EAAK,UAAMc,gBAAN,sBAEPpB,IAiDV,SAAiCM,GAE/BiB,MAAMjB,GACHI,MAAK,SAAAc,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgB9G,QAAQ,cAG7C0F,UAAUC,cAAcoB,MAAMlB,MAAK,SAAAC,GACjCA,EAAakB,aAAanB,MAAK,WAC7BtB,OAAOc,SAAS4B,eAKpBzB,EAAgBC,MAGnBY,OAAM,WACLzB,QAAQwB,IACN,oEArEAc,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMlB,MAAK,WACjCjB,QAAQwB,IACN,gHAMJZ,EAAgBC,OCzCxB0B,I,gBCPAC,EAAQxH,MAAQ,CACdP,IAAK,mGACLc,SAAU,mJ","file":"static/js/main.043bbda4.chunk.js","sourcesContent":["import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <div className=\"copyright\">Copyright &copy; 2019 - The Bastion Bot Project</div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\n\nexport default class Header extends React.PureComponent {\n  render = () => (\n    <header>\n      <div id=\"back-to-home\">\n        <a href=\"https://bastion.traction.one\">&larr;</a>\n      </div>\n      <div title=\"Graphically create Bastion Embed Objects, and use it with various commands of Bastion.\">Bastion Embed Builder</div>\n    </header>\n  );\n}\n","import React from 'react';\nimport { ChromePicker } from 'react-color';\n\nclass Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '#4f545c',\n      intColor: 0,\n      displayColorPicker: false\n    };\n  }\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChangeComplete = (color, event) => {\n    this.setState({\n      color: color.hex,\n      intColor: 256 * 256 * Math.round(color.rgb.r) + 256 * Math.round(color.rgb.g) + Math.round(color.rgb.b)\n    });\n    document.getElementById('builder-container').style['border-left'] = `5px solid ${color.hex}`;\n  }\n\n  render() {\n    return(\n      <div className=\"embed-group embed-color\">\n        <input\n          id = \"color\"\n          type = \"text\"\n          name = \"color\"\n          placeholder = \"Embed Color\"\n          value = { this.state.intColor }\n          onClick = { this.handleClick }\n          style = {{\n            cursor: 'pointer'\n          }}\n          readOnly\n        />\n\n        {\n          this.state.displayColorPicker ?\n            <div\n              style = {{\n                position: 'absolute',\n                zIndex: 2\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  top: '0px',\n                  right: '0px',\n                  bottom: '0px',\n                  left: '0px',\n                  backgroundColor: 'rgba(0, 0, 0, .15)'\n                }}\n                onClick={ this.handleClose }/>\n              <ChromePicker\n                color = { this.state.color }\n                disableAlpha = { true }\n                onChangeComplete = { this.handleChangeComplete }\n              />\n            </div>\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Color;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Author extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      URL: '',\n      iconURL: ''\n    };\n  }\n\n  updateName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  updateURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.URL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      URL: event.target.value\n    });\n  }\n\n  updateIconURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      iconURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-author\">\n        <div className = \"embed-author-icon\">\n          <input\n            type = \"url\"\n            name = \"author:icon_url\"\n            placeholder = \"Author Icon URL\"\n            value = {this.state.iconURL}\n            onChange = {event => this.updateIconURL(event)}\n          />\n        </div>\n        <div className=\"embed-author-name\">\n          <input\n            type = \"text\"\n            name = \"author:name\"\n            placeholder = \"Author Name\"\n            maxLength = \"256\"\n            value = {this.state.name}\n            onChange = {event => this.updateName(event)}\n          />\n        </div>\n        <div className=\"embed-author-url\">\n          <input\n            type = \"url\"\n            name = \"author:url\"\n            placeholder = \"Author URL\"\n            value = {this.state.URL}\n            onChange = {event => this.updateURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Author;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      URL: ''\n    };\n  }\n\n  updateTitle(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  updateURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.URL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      URL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-title\">\n        <div className = \"embed-title-text\">\n          <input\n            type = \"text\"\n            name = \"title\"\n            placeholder = \"Title\"\n            maxLength=\"256\"\n            value = {this.state.title}\n            onChange = {event => this.updateTitle(event)}\n          />\n        </div>\n        <div className=\"embed-title-url\">\n          <input\n            type=\"url\"\n            name=\"url\"\n            placeholder=\"URL\"\n            value = {this.state.URL}\n            onChange = {event => this.updateURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from 'react';\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: ''\n    };\n  }\n\n  updateDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-description\">\n        <textarea\n          name = \"description\"\n          placeholder = \"Description\"\n          maxLength = \"2000\"\n          rows = \"5\"\n          value = {this.state.description}\n          onChange = {event => this.updateDescription(event)}\n        >\n        </textarea>\n      </div>\n    );\n  }\n}\n\nexport default Description;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Thumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thumbnailURL: ''\n    };\n  }\n\n  updateThumbnailURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      thumbnailURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-thumbnail\">\n        <div className = \"embed-thumbnail-url\">\n          <input\n            type = \"url\"\n            name = \"thumbnail:url\"\n            placeholder = \"Thumbnail URL\"\n            value = {this.state.thumbnailURL}\n            onChange = {event => this.updateThumbnailURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thumbnail;\n","import React from 'react';\n\nclass Fields extends React.Component {\n  addField(button) {\n    let fields = document.getElementById('fields');\n    let index = fields.children.length;\n\n\n    if (index >= 24) {\n      button.setAttribute('disabled', true);\n    }\n    else {\n      button.removeAttribute('disabled');\n    }\n\n    fields.insertAdjacentHTML('beforeend',\n      `<div id=\"field-${index}\" class=\"embed-group\" style=\"display: inline-block; margin-top: 0; width: 50%\">\n         <div class=\"field\">\n           <input type=\"text\" name=\"field-${index}:name\" maxlength=\"256\" placeholder=\"Field ${index + 1} Name\" />\n           <textarea name=\"field-${index}:value\" maxlength=\"1024\" rows=\"2\" placeholder=\"Field ${index +1} Description\"></textarea>\n           <label>\n             <input type=\"checkbox\" name=\"field-${index}:inline\" onChange=\"let field = document.getElementById(this.name.replace(':inline', '')); this.checked ? field.setAttribute('style', 'display: inline-block; margin-top: 0; width: 50%;') : field.removeAttribute('style')\"} checked />\n             <span>Inline</span>\n           </label>\n         </div>\n       </div>`);\n\n    let removeBtn = document.getElementById('btn-removeField');\n    removeBtn.removeAttribute('disabled');\n  }\n\n  removeField(button) {\n    let fields = document.getElementById('fields');\n    let index = fields.children.length;\n\n    if (index - 1) {\n      button.removeAttribute('disabled');\n    }\n    else {\n      button.setAttribute('disabled', true);\n    }\n\n    let field = document.getElementById(`field-${index - 1}`);\n    if (field) {\n      field.parentNode.removeChild(field);\n    }\n\n    let addBtn = document.getElementById('btn-addField');\n    addBtn.removeAttribute('disabled');\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-fields\">\n        <div id = \"fields\"></div>\n        <div className = \"embed-group-controls\">\n          <button\n            id = \"btn-addField\"\n            type = \"button\"\n            onClick = {event => this.addField(event.target)}\n          >\n            <span role = \"img\" aria-label = \"Add Emoji\">➕</span>&ensp;\n            Add Field\n          </button>\n          <button\n            id = \"btn-removeField\"\n            type = \"button\"\n            onClick = {event => this.removeField(event.target)}\n          >\n            <span role = \"img\" aria-label = \"Remove Emoji\">➖</span>&ensp;\n            Remove Field\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fields;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageURL: ''\n    };\n  }\n\n  updateImageURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      imageURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-image\">\n        <div className = \"embed-image-url\">\n          <input\n            type = \"url\"\n            name = \"image:url\"\n            placeholder = \"Image URL\"\n            value = {this.state.imageURL}\n            onChange = {event => this.updateImageURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      iconURL: ''\n    };\n  }\n\n  updateText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  updateIconURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      iconURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-footer\">\n        <div className=\"embed-timestamp\">\n          <label>\n            <input\n              name = \"timestamp\"\n              type = \"checkbox\"\n            />\n            Add Timestamp\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Color from './Color';\nimport Author from './Author';\nimport Title from './Title';\nimport Description from './Description';\nimport Thumbnail from './Thumbnail';\nimport Fields from './Fields';\nimport Image from './Image';\nimport Footer from './Footer';\n\nclass Output extends React.Component {\n  render() {\n    return(\n      <div className=\"cell\">\n        <div id=\"builder-container\">\n          <form id=\"embed-builder\">\n            <div className=\"embed\">\n              <div className=\"embed-content\">\n                <div className=\"embed-content-inner\">\n\n                  <Color />\n                  <Author />\n                  <Title />\n                  <Description />\n                  <Thumbnail />\n                  <Fields />\n                  <Image />\n\n                </div>\n              </div>\n\n              <Footer />\n\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import React from 'react';\nimport { RegEx } from '../constants';\n\nclass Output extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      embedObject: {}\n    };\n  }\n\n  generateJSON() {\n    let form = document.getElementById('embed-builder');\n\n    let embedObject = {};\n\n    // Color\n    let color = form.elements['color'].value;\n    if (color) {\n      embedObject.color = parseInt(color, 10);\n    }\n    // Author\n    let author_name = form.elements['author:name'].value;\n    if (author_name) {\n      if (!embedObject.hasOwnProperty('author')) {\n        embedObject.author = {}\n      }\n      embedObject.author.name = author_name;\n\n      let author_url = form.elements['author:url'].value;\n      if (author_url && RegEx.URL.test(author_url)) {\n        embedObject.author.url = author_url;\n      }\n\n      let author_icon_url = form.elements['author:icon_url'].value;\n      if (author_icon_url && RegEx.imageURL.test(author_icon_url)) {\n        embedObject.author.icon_url = author_icon_url;\n      }\n    }\n    // Title\n    let title = form.elements['title'].value;\n    if (title) {\n      embedObject.title = title;\n    }\n    // URL\n    let url = form.elements['url'].value;\n    if (url && RegEx.URL.test(url)) {\n      embedObject.url = url;\n    }\n    // Description\n    let description = form.elements['description'].value;\n    if (description) {\n      embedObject.description = description;\n    }\n    // Fields\n    let fields = document.getElementById('fields').children;\n    if (fields.length) {\n      if (!embedObject.hasOwnProperty('fields')) {\n        embedObject.fields = [];\n      }\n\n      for (let i = 0; i < fields.length; i++) {\n        let field_name = form.elements[`field-${i}:name`].value;\n        let field_value = form.elements[`field-${i}:value`].value;\n        let field_inline = form.elements[`field-${i}:inline`].checked;\n\n        if (field_name && field_value) {\n          embedObject.fields.push({\n            name: field_name,\n            value: field_value,\n            inline: field_inline\n          });\n        }\n      }\n    }\n    // Thumbnail\n    let thumbnail = form.elements['thumbnail:url'].value;\n    if (thumbnail && RegEx.imageURL.test(thumbnail)) {\n      embedObject.thumbnail = thumbnail;\n    }\n    // Image\n    let image = form.elements['image:url'].value;\n    if (image && RegEx.imageURL.test(image)) {\n      embedObject.image = image;\n    }\n\n    // Video\n    // let video = form.elements['video'].value;\n    // if (video) {\n    //   if (!embedObject.hasOwnProperty('video')) {\n    //     embedObject.video = {}\n    //   }\n    //   embedObject.video.url = video;\n    // }\n\n    // Timestamp\n    let timestamp = form.elements['timestamp'].checked;\n    if (timestamp) {\n      embedObject.timestamp = new Date();\n    }\n\n    document.getElementById('json-output').innerHTML = JSON.stringify(embedObject, null, '  ');\n\n    // Code highlighter\n    let jsonOutput = document.getElementById('json-output').innerHTML;\n    jsonOutput = jsonOutput.replace(/\"([\\w]*)\":/g, '<span class=\"highlight key\">\"$1\"</span>:');\n    jsonOutput = jsonOutput.replace(/(\\d*),/g, '<span class=\"highlight number\">$1</span>,');\n    jsonOutput = jsonOutput.replace(/: (true|false)/g, ': <span class=\"highlight boolean\">$1</span>');\n    jsonOutput = jsonOutput.replace(/: \"(.*?)\"/g, ': <span class=\"highlight string\">\"$1\"</span>');\n    document.getElementById('json-output').innerHTML = jsonOutput;\n  }\n\n  copyJSON() {\n    let element = document.getElementById('json-output');\n    if (document.selections) {\n      let range = document.body.createTextRange();\n      range.moveToElementText(element);\n      range.select().createTextRange();\n      document.execCommand('Copy');\n    }\n    else if (window.getSelection) {\n      let range = document.createRange();\n      range.selectNode(element);\n      window.getSelection().addRange(range);\n      document.execCommand('Copy');\n    }\n    else {\n      console.error('Unable to automatically copy the output, please copy it manually and report the issue on GitHub: https://github.com/TheBastionBot/embedbuilder/issues/new?title=The+copy+button+is+not+working');\n    }\n  }\n\n  render() {\n    return(\n      <div className = \"cell\">\n        <div id = \"output-container\">\n          <div className = \"controller\">\n            <button onClick = {() => this.generateJSON()}>\n              <span role=\"img\" aria-label=\"Gear Emoji\">⚙</span>&ensp;Generate JSON\n            </button>\n            <button onClick = {() => this.copyJSON()}>\n              <span role=\"img\" aria-label=\"Copy Emoji\">🔗</span>&ensp;Copy JSON\n            </button>\n          </div>\n          <div className=\"output\">\n            <pre><div id=\"json-output\" readOnly>{JSON.stringify(this.state.embedObject, null, 2)}</div></pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import React from 'react';\nimport Builder from '../Builder';\nimport Output from '../Output';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <main>\n        <Builder />\n        <Output />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Footer from '../Footer';\nimport Header from '../Header';\nimport Main from '../Main';\nimport './index.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='App-container'>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"__bastion\"));\nregisterServiceWorker();\n","exports.RegEx = {\n  URL: /^(http[s]?:\\/\\/)(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/i,\n  imageURL: /^(https?:\\/\\/)((([-a-z0-9]{1,})?(-?)+[-a-z0-9]{1,})(\\.))+([a-z]{1,63})\\/((([a-z0-9._\\-~#%])+\\/)+)?([a-z0-9._\\-~#%]+)\\.(jpg|jpeg|gif|png|bmp)$/i\n};\n"],"sourceRoot":""}